<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope,$http,$q,$mdDialog,$location,$window,$parse){
    var c = this;
	c.progressShow = false;
	c.version=angular.version.full;
  var url = '/api/now/table/x_70016_process_se_processes';
	var config = {};
  //var config = {headers:{authorization:'Basic '+base64Service.encode('admin:Service2016')}};
  // Username Password Base64 Encoding for test only.
  var deferred = $q.defer();
	console.log($scope.user);
	console.log($window.location.origin);


  $http.get(url,config).then(function(data){
    c.processlist = data.data.result;
    for (var i=0;i<c.processlist.length;i++){
      c.processlist[i].display = c.processlist[i].hierarchy1 + '/' + c.processlist[i].hierarchy2 + '/' + c.processlist[i].processname;
      c.processlist[i].search = c.processlist[i].display.toLowerCase();
    }
		console.log(c.processlist);
    deferred.resolve(c.processlist);
  });




  c.getProcesses = function(query){
		console.log(query);
    if (c.processlist === undefined){
			return deferred.promise;
    }

		return query ? c.processlist.filter( createFilterFor(query) ) : c.processlist ;

  };


  c.loadImage = function(obj) {
    console.log('loadImage');
    if (!obj){
      return;
    }
    c.progressShow = true;
    console.log(obj);
    var urlImg="/api/now/attachment?sysparm_limit=1&table_sys_id="+obj.sys_id;
    c.image = {title:obj.processname};
    $http.get(urlImg).then(function(res){
        console.log(res);
        c.image.url=res.data.result[0].download_link;
        c.image.style={'width':'100%','height':'auto'};
				c.image.contentType = res.data.result[0].content_type;
        var config_img = config;
        config_img.responseType = "arraybuffer";
        $http.get(c.image.url,config_img).then(function(res){
          console.log(res);
          c.image.data = "data:"+c.image.contentType+";base64,"+_arrayBufferToBase64(res.data);
       	  c.progressShow = false;
       		 var parentEl = angular.element(document.body);
					$mdDialog.show({
          scope: $scope,
          template: '<md-dialog aria-label="ProcessConfirmation" class="FullScreenDialog">'+
          '<md-toolbar class="md-accent md-hue-3">'+
          ' <div class="md-toolbar-tools">'+
          '<h3 class="md-title">{{c.image.title}}</h3>'+
          '</div></md-toolbar>'+
          '<md-dialog-content>'+
          ' <div class="md-dialog-content">'+
          ' <div layout="row" layout-sm="column" layout-align="space-around">'+
          ' <md-progress-circular ng-if="!loaded27" md-mode="indeterminate" class="md-accent md-hue-3"></md-progress-circular>'+
          ' </div>'+
          '  <img ng-src="{{c.image.data}}" ng-style="c.image.style" ng-load="imageLoaded()"/>'+
          ' </div>'+
          '</md-dialog-content>' +
          '<md-dialog-actions layout="row">' +
          '   <md-button ng-click="zoom(factor100)">100%</md-button>'+
          '   <md-button ng-click="zoom(factor125)" hide-xs>125%</md-button>'+
          '   <md-button ng-click="zoom(factor150)" hide-gt-xs>150%</md-button>'+
          '    <span flex></span>'+
          '    <md-button ng-click="cancel()">' +
          '       Cancel' +
          '   </md-button>' +
          '    <md-button ng-click="nextStep()" class="md-accent">' +
          '       Continue' +
          '   </md-button>' +
          '</md-dialog-actions>' +
          '</md-dialog>',
          parent: parentEl,
          fullscreen:true,
					controller: function DialogController($scope, $mdDialog) {
						console.log('DialogControler');
						console.log($scope.c.image);
            $scope.factor150 = '150%';
						$scope.factor125 = '125%';
						$scope.factor100 = '100%';
						$scope.hide = function() {
							$mdDialog.hide();
						};
						$scope.cancel = function() {
							$mdDialog.cancel();
						};
						$scope.nextStep = function() {
							$mdDialog.hide();
						};
						$scope.imageLoaded = function(){
								console.log('image loaded');
								$scope.loaded27 = true;
							};
						$scope.zoom = function(factor){
							$scope.c.image.style.width = factor;
						};


          }

    })
        .then(function(answer) {

          // anpassen - was geht in servicenow
          //$location.url('/next/step/?id='+obj.sys_id);
          //$window.location.href = '/next/step/?id='+obj.sys_id;
          //$window.location.href = 'https://www.google.de';
          c.selectedProcess = undefined;
          c.searchText = "";
          $window.location.href = 'sp?id=process_feedback2&hierarchy1=' +encodeURIComponent(obj.hierarchy1)+'&hierarchy2='+encodeURIComponent(obj.hierarchy2)+'&processname='+encodeURIComponent(obj.processname);
          //?hierarchy1=hier1&hierarchy2=hier2&processname=processname
        }, function() {

          c.searchText = "";
          c.status = 'You cancelled the dialog.';
		  $window.location.reload();			
        });

    });
	});	
  };




	function createFilterFor(query) {
        var lowercaseQuery = angular.lowercase(query);
        return function filterFn(process){
          return (process.search.indexOf(lowercaseQuery) >= 0);
    };
      }
	
	function _arrayBufferToBase64( buffer ) {
        var binary = '';
        var bytes = new Uint8Array( buffer );
        var len = bytes.byteLength;
        for (var i = 0; i < len; i++) {
          binary += String.fromCharCode( bytes[ i ] );
        }
        return window.btoa( binary );
      }
  
      
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>FullScreenDialog {
  max-width:100%;
  max-height:100%;
  width: 90%;
  height: 90%;
  border-radius: 0;
}
.highlight {
	color: black;
	background: #eee;
	border: 1px solid red;
	border-radius: 2px;
	margin: -1px;
}

.highlight:empty {
	display: none;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Select a process</description>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>process_select</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

	data.user = gs.getUser();
	
	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-08-29 13:26:02</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>d096ef51db2d6a009cc45901cf9619cc</sys_id>
        <sys_mod_count>94</sys_mod_count>
        <sys_name>process_select</sys_name>
        <sys_package display_value="process_select" source="x_70016_process_se">84ae10a3db9de6009cc45901cf961925</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="process_select">84ae10a3db9de6009cc45901cf961925</sys_scope>
        <sys_update_name>sp_widget_d096ef51db2d6a009cc45901cf9619cc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-09-12 12:04:13</sys_updated_on>
        <template><![CDATA[<div>
  <div class="container">
<!-- your widget template -->
  <md-content class="md-padding" layout="column">
      <section>
        <h2 class="md-title">Select a process - Angular {{c.version}}</h2>
      </section>
      <section>
        <md-autocomplete
              md-selected-item-change="c.loadImage(c.selectedProcess)"
              md-selected-item="c.selectedProcess"
              md-search-text="c.searchText"
              md-items="item in c.getProcesses(c.searchText)"
              md-item-text="item.display"
              md-min-length="0"
              md-select-on-match ="true"
              md-autoselect="true"           
              placeholder="click or write">
    <md-item-template>
      <span md-highlight-text="c.searchText" md-highlight-flags="i">{{item.display}}</span>
    </md-item-template>
    <md-not-found>
      No processes matching "{{c.searchText}}" could be found.
    </md-not-found>
  </md-autocomplete>
      </section>
   
	<section layout="row" layout-sm="column" layout-align="space-around" ng-hide="!c.progressShow">
      <md-progress-circular ng-if="c.progressShow" md-mode="indeterminate" class="md-accent"></md-progress-circular>
  </section>		
	
  </md-content>
</div> </div>]]></template>
    </sp_widget>
</record_update>
